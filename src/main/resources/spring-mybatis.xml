<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
  xsi:schemaLocation="http://www.springframework.org/schema/beans  
                        http://www.springframework.org/schema/beans/spring-beans-4.3.xsd  ">
                        

  <!-- 自动扫描 -->
  <!-- <context:component-scan base-package="com.anping.yueche" /> -->  

  <!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 -->
  <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
    <property name="configLocation" value="" /> 
    <property name="dataSource" ref="dataSource" />
    <!-- 配置数据库表对应的java实体类 -->
    <!-- <property name="typeAliasesPackage" value="com.anping.yueche.pojo" /> -->
    <!-- 自动扫描mapping.xml文件，**表示迭代查找 --><!-- 自动扫描entity目录, 省掉Configuration.xml里的手工配置 -->
    <property name="mapperLocations" value="classpath:com/anping/yueche/dao/*Mapper.xml" />
  </bean>
 
 
  <!-- DAO接口所在包名，Spring会自动查找其下的类 ,包下的类需要使用@MapperScan注解,否则容器注入会失败 -->
  <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
    <property name="basePackage" value="com.anping.yueche.dao" />
    <!-- <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" /> -->
    <!-- 采用自动扫描方式创建mapper bean(批量更新模式) -->
    <!-- <property name="sqlSessionTemplateBeanName" value="sqlSessionTemplateBatch" /> -->
    <!-- <property name="annotationClass" value="com.yueche.dao.BatchAnnotation" /> -->
  </bean>
  
  <!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->
  <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
    <property name="dataSource" ref="dataSource" />
  </bean>
</beans>
